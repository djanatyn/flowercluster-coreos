#cloud-config
coreos:
  hostname: stable
  etcd2:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new?size=3
    # specify the initial size of your cluster with ?size=X
    discovery: https://discovery.etcd.io/43232ee60a8c158d98d6e827a5601cb4
    # multi-region and multi-cloud deployments need to use $public_ipv4
    advertise-client-urls: http://$private_ipv4:2379
    initial-advertise-peer-urls: http://$private_ipv4:2380
    # listen on both the official ports and the legacy ports
    # legacy ports can be omitted if your application doesn't depend on them
    listen-client-urls: http://0.0.0.0:2379
    listen-peer-urls: http://$private_ipv4:2380
  units:
    - name: var-lib-docker.mount
      command: start
      content: |
        [Unit]
        Description=mount persistent drive to /var/lib/docker
        [Mount]
        What=/dev/disk/by-id/google-stable-docker
        Where=/var/lib/docker
        Type=ext4
    - name: docker.service
      drop-ins:
        - name: 10-wait-docker.conf
          content: |
            [Unit]
            After=var-lib-docker.mount
            Requires=var-lib-docker.mount
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
    - name: mnt-stable.mount
      command: start
      content: |
        [Mount]
        What=/dev/disk/by-id/google-stable-persistent
        Where=/mnt/stable
        Type=ext3
    - name: registry.service
      command: start
      content: |
        [Unit]
        Description=Registry
        After=docker.service

        [Service]
        RestartSec=10s
        Restart=on-failure
        ExecStartPre=-/usr/bin/docker kill registry1
        ExecStartPre=-/usr/bin/docker rm registry1
        ExecStart=/usr/bin/docker run -p 5000:5000 --name registry1 registry:2
        ExecStop=/usr/bin/docker stop -t 2 registry1
    - name: gogs.service
      command: start
      content: |
        [Unit]
        Description=gogs
        After=docker.service

        [Service]
        RestartSec=10s
        Restart=on-failure
        ExecStartPre=-/usr/bin/docker kill gogs1
        ExecStartPre=-/usr/bin/docker rm gogs1
        ExecStart=/usr/bin/docker run --name gogs1 -p 3000:3000 -p 3001:22 -v gogs-data:/data gogs/gogs
        ExecStop=/usr/bin/docker stop -t 2 gogs
